<template>
  <div id="app" class="flex flex-col items-center">
    <header class="text-6xl font-bold text-center py-16">OpenAI Demo</header>
    <div id="conversation_container" class="flex flex-col justify-center">
      <div v-for="message in messages">
        <Conversation :user="message.user" :msg="message.content" />
      </div>
    </div>
    <div id="input_box" class="flex sticky ">
      <textarea
        name=""
        id=""
        cols="40"
        class="rounded-md text-gray-900 min-h-[50px] max-h-[200px]"
        v-model="prompt"
      ></textarea>
      <button class="ml-3" @click="handleMessageSubmit">
        <font-awesome-icon icon="right-to-bracket" size="2xl" style="color: #ffffff" />
      </button>
    </div>
  </div>
</template>

<script>
import Conversation from './components/Conversation.vue';
import axios from 'axios';

export default {
  name: 'App',
  components: { Conversation },
  data() {
    return {
      prompt: '',
      messages: [],
      openai_secret_key: '# PUT API KEY HERE',
    };
  },
  methods: {
    async handleMessageSubmit() {
      /**
       * Get prompt, store in messages as user message. Then,
       * submit openAI request and clear the input field. 
       */
      this.messages.push({
        user: true,
        content: this.prompt,
      });
      try{
      this.submitOpenAiRequest(this.prompt);
      } catch (error) {
        console.error('SOMETHING BROKE: ', error)
      }
      this.prompt = '';
    },
    async submitOpenAiRequest(prompt) {
      /**
       * Send a request to OpenAI with our prompt. 
       */
      const endpoint = '# PUT ENDPOINT HERE';
      const request = {
        model: '# PUT OPENAI MODEL HERE',
        messages: [
          {
            role: 'system',
            content: 'You are a helpful assistant.',
          },
          {
            role: 'user',
            content: '# PUT PROMPT HERE',
          },
        ],
      };
      const response = await axios.post(endpoint, request, {
        headers: {
					// API token goes here!
          Authorization: `Bearer # PUT API TOKEN HERE`,
          'Content-Type': 'application/json',
        },
      });
      if (response) {
        this.messages.push({
          user: false,
          content: response.data.choices[0].message.content,
        });
      }
      return response;
    },
  },
};
</script>

<style></style>
